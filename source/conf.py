# -*- coding: utf-8 -*-
#
# armacode documentation build configuration file, created by
# sphinx-quickstart on Tue Jul 08 13:12:12 2014.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys
import os

# Mock to ignore Modules
#import mock
#autodoc_mock_imports = ['Rhino', 'System', 'rhinoscriptsyntax', 'scriptcontext', 'clr', 'Grasshopper']
#for mod_name in autodoc_mock_imports :
#    sys.modules[mod_name] = mock.Mock()

class Mock(object):

    __all__ = []

    def __init__(self, *args, **kwargs):
        pass

    def __call__(self, *args, **kwargs):
        return Mock()

    @classmethod
    def __getattr__(cls, name):
        if name in ('__file__', '__path__'):
            return '/dev/null'
        elif name[0] == name[0].upper():
            mockType = type(name, (), {})
            mockType.__module__ = __name__
            return mockType
        else:
            return Mock()

MOCK_MODULES = ['Rhino', 'System', 'rhinoscriptsyntax', 'scriptcontext', 'clr', 'Grasshopper']
for mod_name in MOCK_MODULES:
    sys.modules[mod_name] = Mock()

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
sys.path.insert(0, os.path.abspath('..\\..\\..\\armacode\\Python'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.todo',
    'sphinx.ext.mathjax',
    #'sphinx.ext.napoleon', #Required for google style docstrings Sphinx >1.3
    #'sphinxcontrib.napoleon', #Required for google style docstrings
    'sphinx.ext.ifconfig',
    'sphinx.ext.viewcode',
    'sphinx.ext.autodoc'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'armacode'
copyright = u'2014, Tony Ho'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#

# The short X.Y version.
version = 'Unknown'
# The full version, including alpha/beta/rc tags.
release = 'Unknown'

# Auto detect version from Version file.

with open (os.getcwd()+"/../VERSION", "r") as myfile:
    data = []
    data.append(myfile.readline().strip("\r\n"))
    release = data[0]
    version = str.split(data[0])[0]


# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all
# documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'default'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
html_title = project + " Documentation"

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = "_static/ar-ma_favicon.ico"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'armacodedoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
#'papersize': 'letterpaper',

# The font size ('10pt', '11pt' or '12pt').
#'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
#'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
  ('index', 'armacode.tex', u'armacode Documentation',
   u'Tony Ho', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'armacode', u'armacode Documentation',
     [u'Tony Ho'], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  ('index', 'armacode', u'armacode Documentation',
   u'Tony Ho', 'armacode', 'One line description of project.',
   'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False


# -- Options for Epub output ----------------------------------------------

# Bibliographic Dublin Core info.
epub_title = u'armacode'
epub_author = u'Tony Ho'
epub_publisher = u'Tony Ho'
epub_copyright = u'2014, Tony Ho'

# The basename for the epub file. It defaults to the project name.
#epub_basename = u'armacode'

# The HTML theme for the epub output. Since the default themes are not optimized
# for small screen space, using the same theme for HTML and epub output is
# usually not wise. This defaults to 'epub', a theme designed to save visual
# space.
#epub_theme = 'epub'

# The language of the text. It defaults to the language option
# or en if the language is not set.
#epub_language = ''

# The scheme of the identifier. Typical schemes are ISBN or URL.
#epub_scheme = ''

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#epub_identifier = ''

# A unique identification for the text.
#epub_uid = ''

# A tuple containing the cover image and cover page html template filenames.
#epub_cover = ()

# A sequence of (type, uri, title) tuples for the guide element of content.opf.
#epub_guide = ()

# HTML files that should be inserted before the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#epub_pre_files = []

# HTML files shat should be inserted after the pages created by sphinx.
# The format is a list of tuples containing the path and title.
#epub_post_files = []

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']

# The depth of the table of contents in toc.ncx.
#epub_tocdepth = 3

# Allow duplicate toc entries.
#epub_tocdup = True

# Choose between 'default' and 'includehidden'.
#epub_tocscope = 'default'

# Fix unsupported image types using the PIL.
#epub_fix_images = False

# Scale large images.
#epub_max_image_width = 0

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#epub_show_urls = 'inline'

# If false, no index is generated.
#epub_use_index = True


# Napoleon settings
napoleon_google_docstring = True
napoleon_numpy_docstring = True
napoleon_include_private_with_doc = False
napoleon_include_special_with_doc = True
napoleon_use_admonition_for_examples = False
napoleon_use_admonition_for_notes = False
napoleon_use_admonition_for_references = False
napoleon_use_ivar = False
napoleon_use_param = True
napoleon_use_rtype = True


# Read the docs stuff
on_rtd = os.environ.get('READTHEDOCS', None) == 'True'
if not on_rtd:
    #Choose a theme.
    html_theme = "bootstrap" #Default theme
    # html_theme = "sphinx_rtd_theme" #ReadTheDocs, light theme

    if html_theme == "sphinx_rtd_theme":
        print "Applying ReadTheDocs theme (sphinx_rtd_theme)"
        import sphinx_rtd_theme
        html_theme = "sphinx_rtd_theme"
        html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
        
        html_theme_options = {
            'canonical_url': '',
            'analytics_id': '',
            'logo_only': False,
            'display_version': True,
            'prev_next_buttons_location': 'bottom',
            'style_external_links': False,
            # 'vcs_pageview_mode': '',
            # Toc options
            'collapse_navigation': True,
            'sticky_navigation': True,
            'navigation_depth': 4,
            'includehidden': True,
            'titles_only': False
        }

    if html_theme == "bootstrap":
        print "Applying AR-MA custom Bootstrap theme (sphinx_bootstrap_theme)"
        #Bootstrap theme and bootswatch

        #import sphinx_bootstrap_theme
        html_theme = 'bootstrap'
        html_theme_path = [".\\..\\theme"] #Customized ar-ma bootswatch
        
        # (Optional) Logo. Should be small enough to fit the navbar (ideally 24x24).
        # Path should be relative to the ``_static`` files directory.
        html_logo = "_static\\ar-ma_logo.png"

        # Theme options are theme-specific and customize the look and feel of a
        # theme further.
        html_theme_options = {
            # Navigation bar title. (Default: ``project`` value)
            #'navbar_title': "Demo",

            # Tab name for entire site. (Default: "Site")
            #'navbar_site_name': "Site",

            # A list of tuples containing pages or urls to link to.
            # Valid tuples should be in the following forms:
            #    (name, page)                 # a link to a page
            #    (name, "/aa/bb", 1)          # a link to an arbitrary relative url
            #    (name, "http://example.com", True) # arbitrary absolute url
            # Note the "1" or "True" value above as the third argument to indicate
            # an arbitrary url.
            # 'navbar_links': [
            #     ("Examples", "examples"),
            #     ("Link", "http://example.com", True),
            # ],

            # Render the next and previous page links in navbar. (Default: true)
            'navbar_sidebarrel': True,

            # Render the current pages TOC in the navbar. (Default: true)
            'navbar_pagenav': True,

            # Tab name for the current pages TOC. (Default: "Page")
            #'navbar_pagenav_name': "Page",

            # Global TOC depth for "site" navbar tab. (Default: 1)
            # Switching to -1 shows all levels.
            'globaltoc_depth': 2,

            # Include hidden TOCs in Site navbar?
            #
            # Note: If this is "false", you cannot have mixed ``:hidden:`` and
            # non-hidden ``toctree`` directives in the same page, or else the build
            # will break.
            #
            # Values: "true" (default) or "false"
            'globaltoc_includehidden': "true",

            # HTML navbar class (Default: "navbar") to attach to <div> element.
            # For black navbar, do "navbar navbar-inverse"
            #'navbar_class': "navbar navbar-inverse",

            # Fix navigation bar to top of page?
            # Values: "true" (default) or "false"
            'navbar_fixed_top': "true",

            # Location of link to source.
            # Options are "nav" (default), "footer" or anything else to exclude.
            'source_link_position': "nav",

            # Bootswatch (http://bootswatch.com/) theme.
            #
            # Options are nothing with "" (default) or the name of a valid theme
            # such as "amelia" or "cosmo".
            'bootswatch_theme': "ar-ma",

            # Choose Bootstrap version.
            # Values: "3" (default) or "2" (in quotes)
            'bootstrap_version': "3"
        }
